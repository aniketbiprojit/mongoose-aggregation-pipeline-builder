import { type PipelineStage } from "mongoose";
import { type PipelineType } from "./types";

export class PipelineStageBuilder {
  private _aggregateArr: PipelineStage[] = [];
  constructor() {}

  toArray() {
    return this._aggregateArr;
  }

  static fromArray(arr: PipelineStage[]) {
    let builder = `new PipelineStageBuilder()`;
    arr.forEach((obj) => {
      const totalKeys = Object.keys(obj);
      if (totalKeys.length !== 1) {
        throw new Error("Invalid aggregation pipeline");
      }
      const o = Object.keys(obj)[0] as keyof typeof obj;

      builder += `\n.${o}(${JSON.stringify(obj[o])})`;
    });
    return builder;
  }

